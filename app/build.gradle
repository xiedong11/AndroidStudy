apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.greenrobot.greendao'

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main


final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zhuandian.androidstudy"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
//        }
    }
    buildTypes {
        release {
//            ndk {
//                abiFilters "armeabi-v7a"
//            }
            minifyEnabled false
            debuggable true
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
//            ndk {
//                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
//            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir { dirs 'libs' }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'armeabi-v7a'
//            universalApk true
//        }
//    }
}
//https://blog.csdn.net/callmemrlu/article/details/81153685
greendao {
    schemaVersion 3 //数据库版本号
    daoPackage 'com.zhuandian.androidstudy.dao'      //生成的DAO，DaoMaster和DaoSession的包名称。默认为源实体的包名称。
    targetGenDir 'src/main/java'  //生成DaoMaster,DaoSession,Dao的目录路径。默认为构建目录（build / generated / source / greendao）中生成的源文件夹。
    // generateTests   //设置为true以自动生成单元测试
    //targetGenDirTests  //生成单元测试存储的基本目录。默认为src / androidTest / java。
}

dependencies {
    api(name: 'app-release', ext: 'aar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation('com.alibaba.android:vlayout:1.2.6@aar') {
        transitive = true
        exclude group: 'com.android.support'
    }
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    //引入Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.aspectj:aspectjrt:1.8.9'

    implementation 'io.reactivex:rxjava:1.1.0'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation project(path: ':refresh-layout')
}

task uploadApk{
    doFirst{
        print("=================  start upload apk 00000=========================")
    }
    print("=================  start upload apk =========================")
    doLast{
        print("=================  start upload apk 1111=========================")
    }
}


tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {
        task.doFirst {
            println("=====================assembleDebug doFirst=========================")
        }
    }
}
